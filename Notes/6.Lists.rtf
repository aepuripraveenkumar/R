** Lists
   -------------------------------
    -->* Vectors (one dimensional array): can hold numeric, character or logical values. The elements in a vector all have the same data type.
   
   -->* Matrices (two dimensional array): can hold numeric, character or logical values. The elements in a matrix all have the same data type.
   
   -->* Data frames (two-dimensional objects): can hold numeric, character or logical values. Within a column all elements have the same data type, 
        but different columns can be of different data type.


A list in R allows you to gather a variety of objects under one name (that is, the name of the list) in an ordered way.
These objects can be matrices, vectors, data frames, even other lists, etc.
It is not even required that these objects are related to each other in any way.


** Creating a list
   ----------------------------
   To construct a list you use the function list():
  
   my_list <- list(comp1, comp2 ...)

   The arguments to the list function are the list components. Remember, these components can be matrices, vectors, other lists, ...

   Ex:
	# Vector with numerics from 1 up to 10
	my_vector <- 1:10 

	# Matrix with numerics from 1 up to 9
	my_matrix <- matrix(1:9, ncol = 3)

	# First 10 elements of the built-in data frame mtcars
	my_df <- mtcars[1:10,]

	# Construct list with these different elements:
	my_list <- list(my_vector, my_matrix, my_df)


  O/P:

	 >my_list
	[[1]]
	 [1]  1  2  3  4  5  6  7  8  9 10

	[[2]]
	     [,1] [,2] [,3]
	[1,]    1    4    7
	[2,]    2    5    8
	[3,]    3    6    9

	[[3]]
			   mpg cyl  disp  hp drat    wt  qsec vs am gear carb
	Mazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
	Mazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
	Datsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
	Hornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
	Hornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
	Valiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
	Duster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
	Merc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
	Merc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
	Merc 280          19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4


** Creating a named list
   ----------------------------
you can use the names() function as you did with vectors

my_list <- list(your_comp1, your_comp2)
names(my_list) <- c("name1", "name2")

{OR}

my_list <- list(name1 = your_comp1, name2 = your_comp2)

Ex:
	# Vector with numerics from 1 up to 10
	my_vector <- 1:10 

	# Matrix with numerics from 1 up to 9
	my_matrix <- matrix(1:9, ncol = 3)

	# First 10 elements of the built-in data frame mtcars
	my_df <- mtcars[1:10,]

	# Adapt list() call to give the components names
	my_list <- list(vec=my_vector, mat=my_matrix, df=my_df)

	# Print out my_list
	my_list

** Selecting elements from a list
   --------------------------------------------
One way to select a component is using the numbered position of that component. For example, to "grab" the first component of shining_list you type

shining_list[[1]]

A quick way to check this out is typing it in the console. 
Important to remember: to select elements from vectors, you use single square brackets: [ ]. Don't mix them up!

You can also refer to the names of the components, with [[ ]] or with the $ sign. Both will select the data frame representing the reviews:

shining_list[["reviews"]]
shining_list$reviews

Besides selecting components, you often need to select specific elements out of these components.
For example, with shining_list[[2]][1] you select from the second component, actors (shining_list[[2]]), the first element ([1]).

# Print out the vector representing the actors
shining_list[[2]]

# Print the second element of the vector representing the actors
shining_list[[2]][2]

** Extending List
   ----------------------------------
 To conveniently add elements to lists you can use the c() function, that you also used to build vectors:

ext_list <- c(my_list , my_val)

This will simply extend the original list, my_list, with the component my_val. 
This component gets appended to the end of the list. If you want to give the new list item a name, you just add the name as you did before:

ext_list <- c(my_list, my_name = my_val)

Ex:
	# We forgot something; add the year to shining_list.named year is added to the shining_list with the value 1980
	shining_list_full <- c(shining_list,year=1980)

	# Have a look at shining_list_full
	str(shining_list_full)